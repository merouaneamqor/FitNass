// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bio           String?   // User bio for profile
  city          String?   // User city for profile

  // Relations
  reviews       Review[]
  favorites     Gym[]     @relation("UserFavorites")
  createdGyms   Gym[]     @relation("GymOwner")
}

model Gym {
  id          String   @id @default(cuid())
  name        String
  description String
  address     String
  city        String
  state       String
  zipCode     String
  latitude    Float
  longitude   Float
  phone       String?
  website     String?
  email       String?
  rating      Float    @default(0)
  priceRange  String   // e.g., "$", "$$", "$$$"
  facilities  String[] // Array of facility names
  images      String[] // Array of image URLs
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  owner       User     @relation("GymOwner", fields: [ownerId], references: [id])
  ownerId     String
  reviews     Review[]
  promotions  Promotion[]
  favoritedBy User[]   @relation("UserFavorites")
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  gym       Gym      @relation(fields: [gymId], references: [id])
  gymId     String
}

model Promotion {
  id          String   @id @default(cuid())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  discount    String?  // e.g., "20% off", "Free trial"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  gym         Gym      @relation(fields: [gymId], references: [id])
  gymId       String
}

enum Role {
  USER
  ADMIN
  GYM_OWNER
} 